



# BASe WWW INPUT.
server {
	include /etc/nginx/includes/https.conf;
	server_name *.streem.tech;

	return 307 https://www.streem.tech$request_uri;
}
server {
	include /etc/nginx/includes/https.conf;
	server_name www.streem.tech;

	location / {
		proxy_pass http://192.168.100.153:8081;
		include /etc/nginx/includes/proxy.conf;
	}
        location /auth {
		proxy_pass http://192.168.100.101:30046;
		include /etc/nginx/includes/proxy.conf;
	}
}

server {
	include /etc/nginx/includes/https.conf;
	server_name api.streem.tech;

	location / {
		proxy_pass http://192.168.100.153:8081;
		include /etc/nginx/includes/proxy.conf;
	}
        location /auth {
		proxy_pass http://192.168.100.101:30046;
		include /etc/nginx/includes/proxy.conf;
	}
}


server {
        include /etc/nginx/includes/https.conf;
        server_name streem.tech;

        location ~ /([A-Za-z0-9_-]+)(/[A-Za-z0-9_.-]+)*$ {
                if ($args = "go-get=1") {
                        add_header Content-Type text/html;
                        return 200 '<meta name="go-import" content="$host/$1$2 git https://gitlab.streem.tech/$1$2.git">';
                }
                return 302 https://gitlab.streem.tech/$1;
        }


	location ^~ /([A-Za-z0-9_-]+)(/[A-Za-z0-9_.-]+)*$ {
        	return 307 https://www.streem.tech$request_uri;
        }	

}


#WEBSITE INPUTS
server {
        include /etc/nginx/includes/https.conf;
        server_name nodered.streem.tech;

        location / {
                proxy_pass http://192.168.100.101:31295;
                include /etc/nginx/includes/proxy.conf;
        }
}


server {
        include /etc/nginx/includes/https.conf;
        server_name blog.streem.tech;
		
        location / {
                proxy_pass https://192.168.100.101:31295;
                include /etc/nginx/includes/proxy.conf;
        }
}

server {
        include /etc/nginx/includes/https.conf;
        server_name wiki.streem.tech;
		
        location / {
                proxy_pass http://192.168.100.101:32715;
                include /etc/nginx/includes/proxy.conf;
        }
}

server {
        include /etc/nginx/includes/https.conf;
        server_name gitlab.streem.tech;
        client_max_body_size 0;
        location / {
                proxy_pass http://192.168.100.147;
                include /etc/nginx/includes/proxy.conf;
        }
}


server {
        include /etc/nginx/includes/https.conf;
        server_name keycloak.streem.tech;
        include /etc/nginx/includes/localonly.conf;


        location / {
                proxy_pass http://192.168.100.101:30046;
                include /etc/nginx/includes/proxy.conf;
        }
}

server {
        include /etc/nginx/includes/https.conf;
        server_name nginx-webhook.streem.tech;

        location / {
                content_by_lua_block {

                        ngx.log(ngx.STDERR, 'executing');

                        local shell = require "resty.shell"

                        local stdin = ""
                        local timeout = 1000  -- ms
                        local max_size = 4096  -- byte

                        local ok, stdout, stderr, reason, status =
                        shell.run([[ "/etc/nginx/scripts/test.sh" ]], stdin, timeout, max_size)
                        if not ok then
                                ngx.log(ngx.STDERR, 'NOT OK: STATUS: ', status, " ERR: ", stderr, " REASON: ", reason, " OUT: ", stdout);
                        end
                        if ok then
                                ngx.log(ngx.STDERR, 'IT WAS OK STATUS: ', status, " ERR: ", stderr, " REASON: ", reason, " OUT: ", stdout);
                        end



                } 
                #return 204;
        }
}


